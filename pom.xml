<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.felixalacampagne</groupId>
   <artifactId>recivaportal</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>pom</packaging>
   <name>Master POM for recivalportal sub-projects</name>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
   </properties>

   <modules>
      <module>recivaportal-app</module>
   </modules>
   <profiles>
      <profile>
         <id>tomcat</id>
         <modules>
            <module>recivaportal-tomcat</module>
         </modules>
      </profile>
      <profile>
         <id>jetty</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <modules>
            <module>recivaportal-jetty</module>
         </modules>
      </profile>
   </profiles>

   <dependencies>
         <!-- Jetty 11 needs Servlet 5 -->
         <!-- java.lang.NoClassDefFoundError: jakarta/servlet/ServletInputStream -->
      <dependency>
         <groupId>jakarta.servlet</groupId>
         <artifactId>jakarta.servlet-api</artifactId>
         <version>5.0.0</version>
      </dependency>
         <!-- https://mvnrepository.com/artifact/jakarta.ws.rs/jakarta.ws.rs-api -->
      <dependency>
         <groupId>jakarta.ws.rs</groupId>
         <artifactId>jakarta.ws.rs-api</artifactId>
         <version>3.0.0</version>
      </dependency>
      <!-- It seems this jakarta/jersey magic is another of the ridiculous Java interface/implementations
        obfuscations designed to make everything as complex as possible. It seem 'jakarta' is the
        interface but the actual implimentation is the 'jersey' stuff. There are of course very many
        artifacts to choose from with next to no explanation as to what is really needed.
      -->
      <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-servlet -->
      <dependency>
         <groupId>org.glassfish.jersey.containers</groupId>
         <artifactId>jersey-container-servlet</artifactId>
         <version>3.0.0</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2 -->
      <dependency>
         <groupId>org.glassfish.jersey.inject</groupId>
         <artifactId>jersey-hk2</artifactId>
         <version>3.0.0</version>
      </dependency> 
      
      <!-- This particular bit of magic is required to suppress the enigmatic and completely meaningless message at startup:
      org.glassfish.jersey.server.wadl.WadlFeature configure
      WARNING: JAXBContext implementation could not be found. WADL feature is disabled 
      -->
      <!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime -->
      <dependency>
         <groupId>org.glassfish.jaxb</groupId>
         <artifactId>jaxb-runtime</artifactId>
         <version>3.0.0</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>2.0.0-alpha1</version>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-core</artifactId>
         <version>1.3.0-alpha5</version>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>1.3.0-alpha5</version>
      </dependency>
   </dependencies>
   <!-- All this to tell it to use Java 11  -->
   <build>
   <plugins>
   <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.8.0</version>
    <configuration>
        <release>11</release>  <!--or <release>10</release>-->
    </configuration>
</plugin>
</plugins>
</build>
</project>